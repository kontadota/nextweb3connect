import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { ethers } from "ethers";

import { useState, useEffect } from "react";

export default function Home() {
  const [isConnect, setIsConnect] = useState(false);
  const [hasMetamask, setHasMetamask] = useState(false);
  const [signer, setSigner] = useState(null);

  useEffect(() => {
    if (typeof window.ethereum !== "undefined") {
      setHasMetamask(true);
    }
  }, []);

  const handleCheckConnnet = async (event) => {
    if (hasMetamask) {
      try {
        await ethereum.request({ method: "eth_requestAccounts" });

        // create web3 provider
        const provider = new ethers.providers.Web3Provider(window.ethereum);

        // getSigner
        setSigner(provider.getSigner());

        setIsConnect(true);
      } catch (error) {
        setIsConnect(false);
      }
    } else {
      console.log("You must install metamask first");
    }
  };

  const callSetGreetingFromContract = async () => {
    if (typeof window.ethereum !== "undefined") {
      const contractAddress = "0x5fbdb2315678afecb367f032d93f642f64180aa3";
      const abi = [
        {
          inputs: [
            {
              internalType: "string",
              name: "_greeting",
              type: "string",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "greet",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_greeting",
              type: "string",
            },
          ],
          name: "setGreeting",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ];

      const contract = new ethers.Contract(contractAddress, abi, signer);

      try {
        console.log("call Set Greeting from SM Contract");
        await contract.setGreeting("Hello World");
      } catch (error) {
        console.log("error:", error);
      }
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <button
          name=""
          id=""
          role="button"
          onClick={(event) => handleCheckConnnet(event)}
        >
          Connect:
        </button>
        {isConnect ? (
          <button onClick={() => callSetGreetingFromContract()}>Execute</button>
        ) : (
          "Not Connect"
        )}
      </main>
    </div>
  );
}
